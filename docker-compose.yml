version: "3.8"

services:
  transmissionvpn:
    image: magicalyak/transmissionvpn:latest
    container_name: transmissionvpn
    
    # Load environment variables from .env file
    env_file:
      - .env
    
    # Required capabilities for VPN functionality
    cap_add:
      - NET_ADMIN      # Required for VPN interface and routing
      - SYS_MODULE     # Required for WireGuard (optional for OpenVPN)
    
    # Required for WireGuard (optional for OpenVPN)
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
    
    # Required device for VPN tunnel
    devices:
      - /dev/net/tun:/dev/net/tun
    
    # Port mappings
    ports:
      - "9091:9091"    # Transmission Web UI
      - "8118:8118"    # Privoxy HTTP proxy (if enabled)
    
    # Volume mappings
    volumes:
      - ./config:/config           # Transmission settings and VPN configs
      - ./downloads:/downloads     # Completed downloads
      - ./watch:/watch            # Watch folder for .torrent files
      
      # Uncomment for alternative web UIs:
      # - ./flood-for-transmission:/web-ui:ro    # Flood UI
      # - ./combustion:/web-ui:ro                # Combustion UI
    
    # Restart policy
    restart: unless-stopped
    
    # Optional: Health check
    healthcheck:
      test: ["CMD", "/root/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  transmission-exporter:
    image: sandrotosi/simple_transmission_exporter:latest
    container_name: transmission-exporter
    depends_on:
      - transmissionvpn
    ports:
      - "29091:29091" # Prometheus metrics endpoint
    environment:
      - TRANSMISSION_HOST=transmissionvpn
      - TRANSMISSION_PORT=9091
      - TRANSMISSION_USERNAME=${TRANSMISSION_RPC_USERNAME}
      - TRANSMISSION_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
    restart: unless-stopped

# Uncomment for Docker secrets (production deployments)
# secrets:
#   vpn_username:
#     file: ./secrets/vpn_username.txt
#   vpn_password:
#     file: ./secrets/vpn_password.txt

# Notes on Volumes:
# The example paths `./data/config` and `./data/downloads` assume you have a 'data' subdirectory
# in the same directory as this docker-compose.yml file, and inside 'data', you have 'config' and 'downloads'.
# You MUST adjust these paths to point to the actual locations on your Docker host where you intend
# to store your persistent data, mirroring the HOST_DATA_DIR concept from the docker run examples.
# For instance, if your data is in /srv/transmissionvpn_data:
#   volumes:
#     - /srv/transmissionvpn_data/config:/config
#     - /srv/transmissionvpn_data/downloads:/downloads
#     - /srv/transmissionvpn_data/watch:/watch

# Notes on .env file:
# This docker-compose.yml relies on a .env file in the same directory to supply
# all necessary environment variables (PUID, PGID, TZ, VPN_CLIENT, VPN_CONFIG, etc.).
# Ensure your .env file is correctly configured as per the .env.sample provided
# in the repository. 

# Notes on Metrics Integration:
# The `transmission-exporter` service exposes Transmission metrics in a Prometheus-compatible
# format on port 29091. To visualize these metrics, you will need to:
#
# 1. Set up a Prometheus instance to scrape metrics from this endpoint.
#    Add the following scrape configuration to your 'prometheus.yml':
#
#    scrape_configs:
#      - job_name: 'transmission'
#        static_configs:
#          - targets: ['<your_docker_host_ip>:29091']
#
# 2. Set up a Grafana instance and connect it to your Prometheus data source.
#
# 3. Import the pre-built Grafana dashboard for this exporter. You can find it
#    at https://grafana.com/grafana/dashboards/13265-transmission-by-simple-exporter/
#    or use the dashboard ID 13265. 