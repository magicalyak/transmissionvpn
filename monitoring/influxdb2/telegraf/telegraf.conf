[global_tags]
  environment = "production"
  service = "transmissionvpn"

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

# Output to InfluxDB2
[[outputs.influxdb_v2]]
  urls = ["http://influxdb2:8086"]
  token = "my-super-secret-auth-token"
  organization = "transmissionvpn"
  bucket = "metrics"

# System CPU stats
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

# System memory stats
[[inputs.mem]]

# System disk stats
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# System disk I/O stats
[[inputs.diskio]]

# Network interface stats
[[inputs.net]]

# System load stats
[[inputs.system]]

# Docker container stats
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = []
  source_tag = false
  container_name_include = ["transmissionvpn*"]
  container_name_exclude = []
  timeout = "5s"
  perdevice = true

# HTTP response monitoring for VPN connectivity
[[inputs.http_response]]
  urls = [
    "http://checkip.amazonaws.com",
    "https://api.ipify.org",
    "https://icanhazip.com"
  ]
  response_timeout = "10s"
  method = "GET"
  follow_redirects = false
  tags = {
    service = "vpn-connectivity"
  }

# Monitor Transmission web interface
[[inputs.http_response]]
  urls = ["http://transmissionvpn:9091"]
  response_timeout = "10s"
  method = "GET"
  follow_redirects = false
  tags = {
    service = "transmission-web"
  }

# Custom script for detailed transmission metrics
[[inputs.exec]]
  commands = ["/app/transmission_metrics.py"]
  timeout = "30s"
  data_format = "influx"
  interval = "60s" 