# .env.sample - Example configuration for transmissionvpn
# Copy this to .env and customize for your setup.

# ---- VPN Client Settings ----
# VPN_CLIENT: 'openvpn' or 'wireguard'
VPN_CLIENT=openvpn

# VPN_CONFIG: Path *inside the container* to your VPN configuration file.
# For OpenVPN: e.g., /config/openvpn/your_provider.ovpn
# For WireGuard: e.g., /config/wireguard/wg0.conf
# If unset, the script will try to use the first .ovpn or .conf file found in the
# respective /config/openvpn or /config/wireguard directory.
VPN_CONFIG=

# ---- OpenVPN Specific Credentials ----
# There are two ways to provide OpenVPN credentials if your .ovpn file requires them
# (e.g., it contains `auth-user-pass` without a specific file path, or just `auth-user-pass`).

# Option 1: Use Environment Variables (Recommended if not using a file)
# These are used if both VPN_USER and VPN_PASS are set and not empty.
VPN_USER=
VPN_PASS=

# Option 2: Use a Credentials File at a Fixed Location
# If VPN_USER and VPN_PASS are NOT set (or one/both are empty), the script will
# automatically look for a credentials file at the fixed path inside the container:
#   /config/openvpn/credentials.txt
# This file must contain your username on the first line and your password on the second line.
# To use this method:
#   1. Create a text file (e.g., `my_vpn_auth.txt` or simply `credentials.txt`) on your host system.
#   2. Add your VPN username to the first line.
#   3. Add your VPN password to the second line.
#   4. Ensure this file is mounted into the container at `/config/openvpn/credentials.txt`.
#      For example, if you map your host directory `/opt/transmissionvpn_data/config` to `/config`
#      in the container, you would place your credentials file on the host at
#      `/opt/transmissionvpn_data/config/openvpn/credentials.txt`.
# (The old VPN_CREDENTIALS_FILE environment variable is no longer used.)

# ---- General Settings ----
# ENABLE_PRIVOXY: 'yes' or 'no' to enable/disable Privoxy HTTP proxy (also uses VPN)
ENABLE_PRIVOXY=no

# PRIVOXY_PORT: Port Privoxy will listen on *inside* the container.
# The Docker -p mapping will expose this to your host.
PRIVOXY_PORT=8118

# PUID & PGID: User and Group ID for Transmission and related processes.
# Set these to match the owner of your host's /config, /downloads, and /watch directories
# to avoid permission issues. Find yours with `id yourusername` on your host.
PUID=1000
PGID=1000

# TZ: Your local timezone, e.g., America/New_York, Europe/London
# See: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TZ=Etc/UTC

# LAN_NETWORK: Your LAN network in CIDR notation (e.g., 192.168.1.0/24).
# Allows Transmission/Privoxy access from your LAN, bypassing the VPN for these local connections.
LAN_NETWORK=

# NAME_SERVERS: Comma-separated list of DNS servers to be used by the container.
# If not set, DNS servers from the VPN or system defaults will be used.
# Example: 1.1.1.1,8.8.8.8
NAME_SERVERS=

# DEBUG: 'true' or 'false'. Enables verbose logging for VPN setup scripts.
DEBUG=false

# VPN_OPTIONS: Additional command-line options for the OpenVPN client.
# Example: --inactive 3600 --ping-restart 60
VPN_OPTIONS=

# UMASK: File creation mask for Transmission and files it creates.
# The linuxserver/transmission base image often defaults to 002, which is good for group write access.
# 022 is more restrictive (group read-only).
UMASK=002

# ADDITIONAL_PORTS: Comma-separated list of additional TCP or UDP ports
# (e.g., 51413, 51413/udp for Transmission P2P) that should be allowed for *outbound* traffic
# originating from within the container, through the VPN tunnel.
# This does NOT publish these ports from the container to the host.
# For Transmission, you might need to allow its listening port here if UPnP/NAT-PMP fails
# and you want to ensure connectivity *through the VPN* for incoming peer connections.
# This is different from the Web UI port (9091), which is typically accessed locally.
ADDITIONAL_PORTS=

# TRANSMISSION_VERSION: Set in the Dockerfile, informational. Reflects the base image version.
# TRANSMISSION_VERSION=4.0.6

# ---- Transmission Specific Settings ----
# These are passed to the linuxserver/transmission base image.
# See https://docs.linuxserver.io/images/docker-transmission for more details on some of these.

# TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: 'true' or 'false'. Enable/disable password protection for the Web UI.
# Default: false
# TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=false

# TRANSMISSION_RPC_USERNAME: Username for Web UI if authentication is enabled.
# Default: (empty)
# TRANSMISSION_RPC_USERNAME=

# TRANSMISSION_RPC_PASSWORD: Password for Web UI if authentication is enabled.
# Default: (empty)
# TRANSMISSION_RPC_PASSWORD=

# TRANSMISSION_RPC_HOST_WHITELIST: Comma-separated list of IP addresses/ranges to allow Web UI access from.
# Default: '127.0.0.1,192.168.*.*,10.*.*.*,172.16.*.*'
# TRANSMISSION_RPC_HOST_WHITELIST=

# TRANSMISSION_RPC_WHITELIST_ENABLED: 'true' or 'false'. Enable/disable the host whitelist.
# Default: true
# TRANSMISSION_RPC_WHITELIST_ENABLED=true

# TRANSMISSION_PEER_PORT: Port Transmission uses for incoming P2P connections (TCP and UDP).
# If blank, a random port is usually chosen by Transmission on startup. Set this if you need a fixed port, 
# for example, for port forwarding through your VPN provider or firewall.
# Ensure this port is also listed in ADDITIONAL_PORTS if you want to allow it through the VPN.
# Default: (empty, random)
# TRANSMISSION_PEER_PORT=

# TRANSMISSION_INCOMPLETE_DIR: Path *inside the container* for partially downloaded files.
# If enabled, the base image usually defaults this to /downloads/incomplete.
# Default: (empty, uses base image default)
# TRANSMISSION_INCOMPLETE_DIR=

# TRANSMISSION_INCOMPLETE_DIR_ENABLED: 'true' or 'false'. Enable/disable the incomplete downloads directory feature.
# Default: true
# TRANSMISSION_INCOMPLETE_DIR_ENABLED=true

# TRANSMISSION_WATCH_DIR_ENABLED: 'true' or 'false'. Enable/disable watching the /watch directory for .torrent files.
# The watch directory itself is fixed at /watch via volume mount.
# Default: true
# TRANSMISSION_WATCH_DIR_ENABLED=true

# TRANSMISSION_BLOCKLIST_ENABLED: 'true' or 'false'. Enable/disable the peer blocklist feature.
# Default: true
# TRANSMISSION_BLOCKLIST_ENABLED=true

# TRANSMISSION_BLOCKLIST_URL: URL of the blocklist to download. The base image has a default.
# Example: "http://john.bitsurge.net/public/biglist.p2p.gz"
# Default: (uses base image default)
# TRANSMISSION_BLOCKLIST_URL=